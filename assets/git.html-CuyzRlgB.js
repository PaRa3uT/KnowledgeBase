import{_ as s,c as n,b as i,o as a}from"./app-BsHIgujo.js";const l={};function t(r,e){return a(),n("div",null,e[0]||(e[0]=[i(`<h1 id="работа-с-git" tabindex="-1"><a class="header-anchor" href="#работа-с-git"><span>Работа с GIT</span></a></h1><h2 id="git-portable-windows" tabindex="-1"><a class="header-anchor" href="#git-portable-windows"><span>Git Portable (Windows)</span></a></h2><ol><li>Download MiniGIT from https://github.com/git-for-windows/git/releases</li><li>env_git.cmd</li></ol><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">@echo off</span>
<span class="line">SET PATH=%~dp0MinGit\\cmd;%PATH%</span>
<span class="line">SET gitdir=%~dp0MinGit</span>
<span class="line">SET HOME=%gitdir%\\home</span>
<span class="line">SET EDITOR=&quot;С:\\gvim_9.0.1712_x86\\vim\\vim90\\gvim.exe&quot;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>Установка имени и электронной почты</li></ol><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git config --global user.name &quot;Your Name&quot;</span>
<span class="line">git config --global user.email &quot;you@example.com&quot;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>Параметры установки окончаний строк</li></ol><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Для пользователей Unix/Mac:</span>
<span class="line">git config --global core.autocrlf input</span>
<span class="line">git config --global core.safecrlf warn</span>
<span class="line"></span>
<span class="line">Для пользователей Windows:</span>
<span class="line">git config --global core.autocrlf true</span>
<span class="line">git config --global core.safecrlf warn</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git config http.sslVerify=false  // Disable SSL Verification</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="5"><li>Проверяем</li></ol><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git config --global --list</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="рабочие-процессы" tabindex="-1"><a class="header-anchor" href="#рабочие-процессы"><span>Рабочие процессы</span></a></h2><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Feature:</span>
<span class="line">    - создаём ветку фичи (из мастера) feature/xxx (git checkout -b feature/xxx)</span>
<span class="line">    - ведём разработку в ветке фичи</span>
<span class="line">    - комитим в ветку фичи (git commit -m &quot;comment description&quot;)</span>
<span class="line">    - слить изменения из мастера в свою ветку ?(merge/*rebase)</span>
<span class="line">    - пушим изменения на сервер (git push orign feature/xxx)</span>
<span class="line">    - создаём запрос на слияние веток (либо ?*merge/?rebase в мастер)</span>
<span class="line"></span>
<span class="line">Fix:</span>
<span class="line">    - создаём ветку исправления (?откуда мастер или feature/xxx)</span>
<span class="line">    -</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="создание-новои-ветки-из-мастера" tabindex="-1"><a class="header-anchor" href="#создание-новои-ветки-из-мастера"><span>Создание новой ветки (из мастера)</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git checkout master</span>
<span class="line">git cheackout -b feature/xxx</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="слить-изменения-из-мастера-в-свою-ветку" tabindex="-1"><a class="header-anchor" href="#слить-изменения-из-мастера-в-свою-ветку"><span>Слить изменения из мастера в свою ветку</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git checkout feature/xxx</span>
<span class="line">git pull --rebase origin master</span>
<span class="line">git pull --no-rebase origin master</span>
<span class="line">? решение конфликтов:</span>
<span class="line">    - решаем конфликт</span>
<span class="line">    git add &lt;conflicted file&gt;</span>
<span class="line">    git commit -m &lt;enter message&gt;</span>
<span class="line">    git rebase --continue</span>
<span class="line">    git push -f origin feature</span>
<span class="line">    в последний, без ручного git commit -m &lt;enter message&gt;, получилась лажа, новый комит переписал все изменения, причём откатив нужные коммиты, а старые комиты повисли в воздухе</span>
<span class="line"></span>
<span class="line">git push -f origin feature (?перед пушем в ветку, надо обязательно сделать pull из этой ветки, потому что если в неё кто то запушил комиты, то мы их затрём своей веткой без этих комитов)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="отмена-подготовленных-и-неподготовленных-изменении" tabindex="-1"><a class="header-anchor" href="#отмена-подготовленных-и-неподготовленных-изменении"><span>Отмена подготовленных и неподготовленных изменений</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">    git reset --soft &lt;commit_hash&gt; - откатывает изменения до указанного комита. Изменения остаются в индексе, как будто вы сделали git add, но не закоммитили их</span>
<span class="line">    git reset --mixed - (стоит по умолчанию) — аналогичен варианту выше, но изменения уже не будут отслеживаться. Если после ресета выполнить команду git status, то Git предложит добавить изменения командой git add.</span>
<span class="line">    git reset --hard - Полностью откатывает изменения и заменяет данные в рабочей директории. Все закоммиченные и незакоммиченные изменения удаляются.</span>
<span class="line">    git reset --soft HEAD~1 - перейти к состоянию предыдущего коммита</span>
<span class="line">    git rm --cached - удалить из индекса, но оставить в файловой системе</span>
<span class="line"></span>
<span class="line">    git checkout &lt;file_name&gt; - восстановить неподготовленный к комиту файл</span>
<span class="line">    git reset HEAD &lt;file_name&gt; - восстановить подготовленный к комиту файл</span>
<span class="line">    git reset HEAD - для всей ветки</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="откат-последнего-коммита" tabindex="-1"><a class="header-anchor" href="#откат-последнего-коммита"><span>Откат последнего коммита</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Откатить последний коммит можно с помощью параметра revert. </span>
<span class="line">Создастся новый коммит, содержащий обратные преобразования относительно предыдущего, и добавится к истории текущей ветки.</span>
<span class="line">git revert HEAD</span>
<span class="line">git revert &lt;commit_id&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="удалить-последнее-изменение-использовал-для-отмены-слияния-master-в-ветку-feature" tabindex="-1"><a class="header-anchor" href="#удалить-последнее-изменение-использовал-для-отмены-слияния-master-в-ветку-feature"><span>Удалить последнее изменение (использовал для отмены слияния master в ветку feature)</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git checkout feature/xxx</span>
<span class="line">git reset --hard HEAD~1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="изменение-последнего-коммита" tabindex="-1"><a class="header-anchor" href="#изменение-последнего-коммита"><span>Изменение последнего коммита</span></a></h3><p>С помощью amend прекрасно исправляются локальные коммиты, а исправления можно передать в общий репозиторий. Однако изменять коммиты, уже доступные другим пользователям, не следует. Помните, что изменённые коммиты являются совершенно новыми, а предыдущий коммит уже не будет доступен в текущей ветке. Последствия будут такими же, как при отмене изменений публичного снимка</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git commit --amend -m &quot;Updated message for the previous commit&quot;</span>
<span class="line"></span>
<span class="line">git push --force-with-lease repository-name branch-name (это только если коммит с неправильным комментарием запушен в удалённый репозиторий)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git add dir1</span>
<span class="line">git commit</span>
<span class="line"></span>
<span class="line"># Here you forgot to add dir2 to commit, you can execute the</span>
<span class="line">following command to amend the other files and folders.</span>
<span class="line"></span>
<span class="line">git add dir2</span>
<span class="line">git commit --amend --no-edit</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="залить-изменения-из-своеи-ветки-в-master" tabindex="-1"><a class="header-anchor" href="#залить-изменения-из-своеи-ветки-в-master"><span>Залить изменения из своей ветки в master</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git push origin &lt;branch_name&gt;:master</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="слияние-двух-веток" tabindex="-1"><a class="header-anchor" href="#слияние-двух-веток"><span>Слияние двух веток</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Команда объединит указанную ветку с основной.</span>
<span class="line">git merge &lt;existing_branch_name&gt;</span>
<span class="line"></span>
<span class="line">если надо выполнить коммит слияния, выполните команду git merge с флагом --no-ff</span>
<span class="line">git merge --no-ff &lt;existing_branch_name&gt;</span>
<span class="line"></span>
<span class="line">git merge --squash &lt;existing_branch_name&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="работа-с-задачами" tabindex="-1"><a class="header-anchor" href="#работа-с-задачами"><span>Работа с задачами</span></a></h3><p>git checkout -b feature/number<br> git add &lt;file_name&gt;<br> git commit -m &quot;&quot;<br> git push origin feature/number<br> pull request - если изменения приняты, переходим к следующему шагу<br> git checkout master<br> git pull origin master</p><h3 id="история-изменении" tabindex="-1"><a class="header-anchor" href="#история-изменении"><span>История изменений</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git log --pretty=format:&quot;%h %ad %an %s&quot; --stat</span>
<span class="line">git log --graph</span>
<span class="line">git log --graph --oneline</span>
<span class="line">*git log --graph --oneline --decorate</span>
<span class="line">git log --all --graph --oneline --decorate</span>
<span class="line">git log --graph --oneline -5</span>
<span class="line">Фильтрация истории коммитов:</span>
<span class="line">    По дате:</span>
<span class="line">        git log --after=&quot;2020-4-1&quot;</span>
<span class="line">        git log --after=&quot;yesterday&quot;</span>
<span class="line">        git log --after=&quot;1 week ago&quot;</span>
<span class="line">        git log --after=&quot;2020-4-1&quot; --before=&quot;2014-4-6&quot;</span>
<span class="line">    По автору:</span>
<span class="line">        git log --author=&quot;Alex&quot; — найти коммиты Алекса.</span>
<span class="line">        git log --author=&quot;Alex\\|Ivan&quot; — найти коммиты Алекса и Ивана.</span>
<span class="line">    По другим параметрам:</span>
<span class="line">        git log --grep=&quot;ISSUE-777:&quot; — по паттерну сообщения.</span>
<span class="line">        git log -- foo.py bar.py — по файлам, которые были изменены.</span>
<span class="line">        git log -S &quot;git&quot; — поиск по содержимому файлов. Например, когда в файлы была добавлена или удалена строчка git.</span>
<span class="line">    git log --no-merges — убрать из выборки мёрж-коммиты.</span>
<span class="line">    git log --merges — выбрать только мёрж-коммиты.</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="добавить-удаленныи-репозитории-пустои-в-существующую-папку" tabindex="-1"><a class="header-anchor" href="#добавить-удаленныи-репозитории-пустои-в-существующую-папку"><span>Добавить удалённый репозиторий (пустой) в существующую папку</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git init</span>
<span class="line">git add .</span>
<span class="line">git commit -m &quot;Initial commit&quot;</span>
<span class="line">git add origin &lt;remote_origin_url&gt;</span>
<span class="line">git push origin master</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="перенести-изменения-из-другого-коммита-с-помощью-cherry-pick" tabindex="-1"><a class="header-anchor" href="#перенести-изменения-из-другого-коммита-с-помощью-cherry-pick"><span>Перенести изменения из другого коммита с помощью cherry pick</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git switch &lt;target_branch&gt;</span>
<span class="line">git cherry-pick &lt;commit-hash&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="описание-команд" tabindex="-1"><a class="header-anchor" href="#описание-команд"><span>Описание команд</span></a></h2><p>git init - создание нового репозитория<br> git init --bare<br> git clone &lt;remote&gt; - клонирование удаленного репозитория</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git add  // добавляет все новые, измененные, удаленные файлы из текущей директории и ее поддиректорий</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>git add .<br> git add &lt;file_name&gt;<br> git rm &lt;file&gt; - удаление файла<br> git status - показывает состояние репозитория (отслеживаемые, измененные, новые файлы и так далее)<br> git diff<br> git diff --staged<br> git diff branch1 -- branch2<br> git diff commit1 commit2<br> git checkout<br> git checkout -b &lt;branch_name&gt;<br> git branch - показывает список веток<br> git branch - a - показывает список удалённых(?deleted/?remote) веток<br> git branch &lt;branch&gt; - создание новой ветки<br> git branch -D &lt;branch_name&gt; - удаление ветки<br> git pull<br> git pull &lt;repo link&gt; - скачивание данных с сервера<br> git pull &lt;remote&gt; &lt;branch&gt; - получение данных из удаленного репозитория и слияние с локальным<br> git push &lt;remote_name&gt; &lt;branch_name&gt; - перенести все локальные изменения, в удаленный репозиторий<br> git push &lt;remote&gt; :&lt;branch&gt; - удаление ветки на удаленном сервере<br> git fetch - связывается с удаленным репозиторием и забирает из него все изменения и сохраняет их локально<br> git merge &lt;branch_name&gt; - merge branch into current branch<br> git commit --allow-empty-message -m &#39;&#39; git commit -m &quot;Commit description&quot; - сохраняет изменения в локальном репозитории<br> git commit --amend -m &quot;updated latest commit message&quot;<br> git stash - Припрятывание незавершённых наработок<br> git stash list - Список припрятанных изменений git stash pop stash_name - применить и удалить припрятанное изменение<br> git stash apply &lt;stash_name&gt; - применить одно из предыдущих припрятанных изменений, если не указать имя то git попытается восстановить самое последнее припрятанное изменение<br> git stash drop stash_name - удалить припрятанное изменение<br> git log - просмотр истории коммитов<br> git reflog<br> git config<br> git config --list --show-origin (посмотреть все установленные настройки и узнать где именно они заданы)<br> git help<br> git reset -- hard - ОПАСНАЯ команда, которая отменяет все незавершенные изменения<br> git remote add &quot;url or address&quot; - добавляет новый удаленный адрес<br> git remote get-url &lt;name&gt;<br> git remote set-url &lt;name&gt; &lt;newurl&gt;<br> git remote rename &lt;old&gt; &lt;new&gt;<br> git remote remove &lt;name&gt;<br> git tag<br> git rebase - интегрирует изменения из одной ветки в другую<br> git config –global color.ui true - добавляет глобальную настройку в конфигурационный файл и делает вывод цветным для всех операций со всеми репозиториями<br> git merge - используется для слияния одной или нескольких веток в текущую, после чего устанавливает указатель текущей ветки на результирующий коммит<br> git clean -df - удаляет неотслеживаемые файлы и директории<br> git show &lt;commit_id&gt;<br> git prune (git prune &lt; --dry-run&gt;| &lt;-v&gt; | &lt;--progress&gt; |&lt;--expire &lt;time&gt; |&lt;-- &gt; |&lt;head&gt;…)<br> --dry-run: doesn’t execute the prune but rather lists what it will remove<br> -v (--verbose): displays the output of pruned data and actions<br> --progress: displays output indicating the prune’s progress<br> --expire &lt;time&gt;: specifies when the wasted objects will expire<br> &lt;head&gt;…: specifies the options that are referenced from the commit’s head</p><h2 id="остальное" tabindex="-1"><a class="header-anchor" href="#остальное"><span>Остальное</span></a></h2><p>git config --global http.proxy http://proxyuser:proxypass@proxyaddress:8080</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">feat – a new feature is introduced with the changes</span>
<span class="line">fix – a bug fix has occurred</span>
<span class="line">chore – changes that do not relate to a fix or feature and don&#39;t modify src or test files (for example updating dependencies)</span>
<span class="line">refactor – refactored code that neither fixes a bug nor adds a feature</span>
<span class="line">docs – updates to documentation such as a the README or other markdown files</span>
<span class="line">style – changes that do not affect the meaning of the code, likely related to code formatting such as white-space, missing semi-colons, and so on.</span>
<span class="line">test – including new or correcting previous tests</span>
<span class="line">perf – performance improvements</span>
<span class="line">ci – continuous integration related</span>
<span class="line">build – changes that affect the build system or external dependencies</span>
<span class="line">revert – reverts a previous commit </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,46)]))}const c=s(l,[["render",t],["__file","git.html.vue"]]),p=JSON.parse('{"path":"/dev/git.html","title":"Работа с GIT","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Git Portable (Windows)","slug":"git-portable-windows","link":"#git-portable-windows","children":[]},{"level":2,"title":"Рабочие процессы","slug":"рабочие-процессы","link":"#рабочие-процессы","children":[{"level":3,"title":"Создание новой ветки (из мастера)","slug":"создание-новои-ветки-из-мастера","link":"#создание-новои-ветки-из-мастера","children":[]},{"level":3,"title":"Слить изменения из мастера в свою ветку","slug":"слить-изменения-из-мастера-в-свою-ветку","link":"#слить-изменения-из-мастера-в-свою-ветку","children":[]},{"level":3,"title":"Отмена подготовленных и неподготовленных изменений","slug":"отмена-подготовленных-и-неподготовленных-изменении","link":"#отмена-подготовленных-и-неподготовленных-изменении","children":[]},{"level":3,"title":"Откат последнего коммита","slug":"откат-последнего-коммита","link":"#откат-последнего-коммита","children":[]},{"level":3,"title":"Удалить последнее изменение (использовал для отмены слияния master в ветку feature)","slug":"удалить-последнее-изменение-использовал-для-отмены-слияния-master-в-ветку-feature","link":"#удалить-последнее-изменение-использовал-для-отмены-слияния-master-в-ветку-feature","children":[]},{"level":3,"title":"Изменение последнего коммита","slug":"изменение-последнего-коммита","link":"#изменение-последнего-коммита","children":[]},{"level":3,"title":"Залить изменения из своей ветки в master","slug":"залить-изменения-из-своеи-ветки-в-master","link":"#залить-изменения-из-своеи-ветки-в-master","children":[]},{"level":3,"title":"Слияние двух веток","slug":"слияние-двух-веток","link":"#слияние-двух-веток","children":[]},{"level":3,"title":"Работа с задачами","slug":"работа-с-задачами","link":"#работа-с-задачами","children":[]},{"level":3,"title":"История изменений","slug":"история-изменении","link":"#история-изменении","children":[]},{"level":3,"title":"Добавить удалённый репозиторий (пустой) в существующую папку","slug":"добавить-удаленныи-репозитории-пустои-в-существующую-папку","link":"#добавить-удаленныи-репозитории-пустои-в-существующую-папку","children":[]},{"level":3,"title":"Перенести изменения из другого коммита с помощью cherry pick","slug":"перенести-изменения-из-другого-коммита-с-помощью-cherry-pick","link":"#перенести-изменения-из-другого-коммита-с-помощью-cherry-pick","children":[]}]},{"level":2,"title":"Описание команд","slug":"описание-команд","link":"#описание-команд","children":[]},{"level":2,"title":"Остальное","slug":"остальное","link":"#остальное","children":[]}],"git":{"updatedTime":1736250118000,"contributors":[{"name":"Tarasov Artur","username":"Tarasov Artur","email":"para3ut.74@gmail.com","commits":28,"url":"https://github.com/Tarasov Artur"},{"name":"Тарасов Артур Робертович","username":"Тарасов Артур Робертович","email":"artarasov@mts.ru","commits":1,"url":"https://github.com/Тарасов Артур Робертович"},{"name":"PaRa3uT","username":"PaRa3uT","email":"PaRa3uT.74@gmail.com","commits":7,"url":"https://github.com/PaRa3uT"}]},"filePathRelative":"dev/git.md"}');export{c as comp,p as data};

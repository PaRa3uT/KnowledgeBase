import{_ as i,c as a,b as e,o as r}from"./app-BsHIgujo.js";const n={};function t(o,l){return r(),a("div",null,l[0]||(l[0]=[e('<h1 id="avr" tabindex="-1"><a class="header-anchor" href="#avr"><span>AVR</span></a></h1><h2 id="микроконтроллеры" tabindex="-1"><a class="header-anchor" href="#микроконтроллеры"><span>Микроконтроллеры</span></a></h2><h3 id="attiny-85" tabindex="-1"><a class="header-anchor" href="#attiny-85"><span>ATtiny 85:</span></a></h3><ul><li><strong>Clock Speed</strong> =</li><li><strong>Flash</strong> =</li><li><strong>SRAM</strong> =</li><li><strong>EEPROM</strong> =</li><li>Ports ():</li><li>Interupts:</li></ul><h3 id="atmega-32u4" tabindex="-1"><a class="header-anchor" href="#atmega-32u4"><span>ATmega 32u4:</span></a></h3><ul><li>Clock Speed = 0...16MHz (4.5...5.5V)</li><li>Flash = 32</li><li>SRAM = 2.5KB</li><li>EEPROM = 1KB</li><li>Ports ():</li><li>Interupts:</li></ul><h3 id="atmega-168p" tabindex="-1"><a class="header-anchor" href="#atmega-168p"><span>ATmega 168P:</span></a></h3><ul><li>Clock Speed = 0...20MHz (4.5...5.5V)</li><li>Flash = 16KB</li><li>SRAM = 1</li><li>EEPROM = 512</li><li>Ports ():</li><li>Interupts:</li></ul><h3 id="atmega-328p" tabindex="-1"><a class="header-anchor" href="#atmega-328p"><span>ATmega 328P:</span></a></h3><ul><li>Clock Speed = 0...20MHz (4.5...5.5V)</li><li>Flash = 32KB</li><li>SRAM = 2KB</li><li>EEPROM = 1KB</li><li>Ports ():</li><li>Interupts:</li></ul><h3 id="atmega-2560" tabindex="-1"><a class="header-anchor" href="#atmega-2560"><span>ATmega 2560:</span></a></h3><ul><li>Clock Speed = 0...16MHz (4.5...5.5V)</li><li>Flash = 256KB</li><li>SRAM = 8KB</li><li>EEPROM = 4KB</li><li>Ports (86):</li><li>Interupts (32):</li></ul><h2 id="отладочные-платы" tabindex="-1"><a class="header-anchor" href="#отладочные-платы"><span>Отладочные платы</span></a></h2><h3 id="arduino-pro-micro-arduino-leonardo" tabindex="-1"><a class="header-anchor" href="#arduino-pro-micro-arduino-leonardo"><span>Arduino Pro Micro (Arduino Leonardo)</span></a></h3><ul><li><strong>Microcontroller</strong>: ATmega32u4</li><li><strong>Clock Speed</strong>: 16MHz</li><li><strong>Flash</strong>: 32KB</li><li>SRAM: 2,5KB</li><li>EEPROM: 1KB</li><li>Ports: <ul><li>max 40mA per PIN</li><li>ADC (10-bit) (4шт.): (A0, A1, A2, A3)</li><li>Digital: 12шт.</li><li>PWM: 5шт.</li><li>I2C (1шт.): 2 (SDA), 3 (SCL)</li><li>SPI (1шт.): 16 (MOSI), 14 (MISO) и 15 (SCK). Линия SS не выведена ни на один пользовательский контакт. В случае необходимости её использования в проекте, вам не составит труда к ней подключиться. Физический вывод контроллера 8 (SS, PB0) соединён через резистор со светодиодом RX</li><li>Serial (UART) (1шт.): TX0, RX1</li><li>VCC: входящее отрегулированное напряжение, не превышающее основное рабочее 5 вольт. Подача напряжения через вывод построено по схеме, исключающей в своей цепи регулятор напряжения, и напрямую питающей микросхему. Данный вывод можно использовать источником питания для подключаемых расширений или датчиков/сенсоров;</li><li>RAW: входящее запитывающее напряжение платы. Подаваемое постоянное напряжение может быть в диапазоне от 6 до 12 вольт. Энергосхема Pro Micro автоматически выравнивает (стабилизирует) напряжение выхода до необходимого 5 вольт при помощи встроенного регулятора. Источниками питания могут послужить и блоки питания, и разнообразные аккумуляторы, и даже самые простые и широко распространённые батарейки. Выбор зависит только от того, будет ли законченная модель стационарной, или подвижной, или вообще переносной</li></ul></li><li>LED: 13 (User, Green)</li><li>Recovery: <ul><li>https://learn.sparkfun.com/tutorials/pro-micro--fio-v3-hookup-guide/troubleshooting-and-faq#ts-reset</li><li>Press reset twice, quickly to enter bootloader mode.</li></ul></li></ul><h3 id="arduino-pro-mini" tabindex="-1"><a class="header-anchor" href="#arduino-pro-mini"><span>Arduino Pro Mini:</span></a></h3><ul><li>Ports: <ul><li>Serial (UART): 2</li></ul></li></ul><h3 id="arduino-nano-atmega168" tabindex="-1"><a class="header-anchor" href="#arduino-nano-atmega168"><span>Arduino Nano (ATmega168):</span></a></h3><ul><li>Microcontroller: ATmega168</li><li>Clock Speed: 16MHz</li><li>Flash: 16KB</li><li>SRAM: 1KB</li><li>EEPROM: 512Byte</li><li>Ports: <ul><li>max 40mA per PIN</li><li>ADC: 10-bit (8шт.) (A0..A7)</li><li>Digital: 14</li><li>PWM: 6</li></ul></li></ul><h3 id="arduino-nano-atmega328" tabindex="-1"><a class="header-anchor" href="#arduino-nano-atmega328"><span>Arduino Nano (ATmega328):</span></a></h3><ul><li><strong>Microcontroller</strong>: ATmega328</li><li><strong>Clock Speed</strong>: 16MHz</li><li><strong>Flash</strong>: 32KB</li><li><strong>SRAM</strong>: 2KB</li><li><strong>EEPROM</strong>: 1KB</li><li><strong>Ports</strong>: <ul><li>max 40mA per PIN</li><li>ADC (10-bit) (8шт.): A0..A7</li><li>Digital: 14</li><li>PWM (8-bit) (6шт.): 3, 5, 6, 9, 10, 11</li><li>I2C: A4 (SDA), A5 (SCL)</li><li>SPI: 10 (SS), 11 (MOSI), 12 (MISO), 13 (SCK)</li><li>LED: 13</li><li>Other: <ul><li>AREF. Опорное напряжение для аналоговых входов. Используется с функцией analogReference().</li><li>Reset. Низкий уровень сигнала на выводе перезагружает микроконтроллер. Обычно применяется для подключения кнопки перезагрузки на плате расширения, закрывающей доступ к кнопке на самой плате Arduino.</li><li>Последовательная шина: 0 (RX) и 1 (TX). Выводы используются для получения (RX) и передачи (TX) данных TTL. Данные выводы подключены к соответствующим выводам микросхемы последовательной шины FTDI USB-to-TTL.</li><li>Внешнее прерывание: 2 и 3. Данные выводы могут быть сконфигурированы на вызов прерывания либо на младшем значении, либо на переднем или заднем фронте, или при изменении значения. Подробная информация находится в описании функции attachInterrupt().</li></ul></li></ul></li></ul>',21)]))}const d=i(n,[["render",t],["__file","avr.html.vue"]]),u=JSON.parse('{"path":"/hardware/avr.html","title":"AVR","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Микроконтроллеры","slug":"микроконтроллеры","link":"#микроконтроллеры","children":[{"level":3,"title":"ATtiny 85:","slug":"attiny-85","link":"#attiny-85","children":[]},{"level":3,"title":"ATmega 32u4:","slug":"atmega-32u4","link":"#atmega-32u4","children":[]},{"level":3,"title":"ATmega 168P:","slug":"atmega-168p","link":"#atmega-168p","children":[]},{"level":3,"title":"ATmega 328P:","slug":"atmega-328p","link":"#atmega-328p","children":[]},{"level":3,"title":"ATmega 2560:","slug":"atmega-2560","link":"#atmega-2560","children":[]}]},{"level":2,"title":"Отладочные платы","slug":"отладочные-платы","link":"#отладочные-платы","children":[{"level":3,"title":"Arduino Pro Micro (Arduino Leonardo)","slug":"arduino-pro-micro-arduino-leonardo","link":"#arduino-pro-micro-arduino-leonardo","children":[]},{"level":3,"title":"Arduino Pro Mini:","slug":"arduino-pro-mini","link":"#arduino-pro-mini","children":[]},{"level":3,"title":"Arduino Nano (ATmega168):","slug":"arduino-nano-atmega168","link":"#arduino-nano-atmega168","children":[]},{"level":3,"title":"Arduino Nano (ATmega328):","slug":"arduino-nano-atmega328","link":"#arduino-nano-atmega328","children":[]}]}],"git":{"updatedTime":1647282597000,"contributors":[{"name":"PaRa3uT","username":"PaRa3uT","email":"PaRa3uT.74@gmail.com","commits":10,"url":"https://github.com/PaRa3uT"}]},"filePathRelative":"hardware/avr.md"}');export{d as comp,u as data};

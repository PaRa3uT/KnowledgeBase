import{_ as t,c as o,b as r,o as i}from"./app-BsHIgujo.js";const s={};function n(a,e){return i(),o("div",null,e[0]||(e[0]=[r(`<h1 id="powershell" tabindex="-1"><a class="header-anchor" href="#powershell"><span>PowerShell</span></a></h1><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Get-NetTCPConnection -State Listen</span>
<span class="line">Get-NetTCPConnection -State Established</span>
<span class="line">Get-Process -Id (Get-NetTCPConnection -State Listen).OwningProcess</span>
<span class="line">Get-Process -Id (Get-NetTCPConnection -State Listen).OwningProcess | Format-Table Id, ProcessName, Path</span>
<span class="line">Get-NetTcpConnection -State Listen | Select-Object LocalAddress,LocalPort,OwningProcess,@{Name=&quot;Process&quot;;Expression={(Get-Process -Id $_.OwningProcess).ProcessName}} | Sort-Object -Property LocalPort | Format-Table</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>##Запуск PowerShell скрипта в обход ExecutionPolicy: powershell.exe -ExecutionPolicy Bypass -File C:\\myUnsigned.ps1 Или: powershell -ep Bypass C:\\myUnsigned.ps1 default = Restricted</p><p>##Работа с переменными Get-Variable – выводит список переменных и их значения (или одну указанную переменную); New-Variable – создает новую переменную; Set-Variable – задает значение переменной. Если переменная с указанным именем не существует, то она будет создана; Clear-Variable — удаляет значение переменной; Remove-Variable — удаляет переменную и ее значение.</p><p>##Импорт и экспорт Export-Csv – экспорт данных в формат CSV; Import-Csv – импортирует данные из CSV файла; Export-Clixml — экспорт данных в формат XML; Import-Clixml — импортирует файл CLIXML и создает соответствующие объекты в оболочке Windows PowerShell; Out-File — посылает вывод результата работы командлета во внешний файл (например, в TXT); Out-Printer — вывод результата работы команды на принтер; Import-Module — добавляет модули в текущей сессии.</p><p>##Полезные командлеты Windows PowerShell Get-Help – показывает справку по командлету, функции и общую справку по Windows PowerShell. Справка бывает нескольких типов: краткая, детальная, полная и вывод только примеров; Update-Help — загружает и устанавливает новые файлы справки, т.е. обновление справки; Get-Command – командлет поиска нужной команды, можно искать как по глаголу, так и по существительному, также возможно использование маски, если Вы не знаете точное наименование глагола или существительного; Get-Alias – показывает псевдонимы, все или конкретной команды; Get-PSDrive – показывает подключенные диски; Get-Member – выводит свойства и методы, которые есть у объекта; Get-WindowsFeature – выводит сведения о доступных ролях и компонентах сервера; Install-WindowsFeature (эквивалентен Add-WindowsFeature) — устанавливает роли или компоненты на указанный сервер; Uninstall-WindowsFeature (эквивалентен Remove-WindowsFeature) – удаляет роли или компонента сервера; Get-History — возвращает список команд, введенных в ходе текущей сессии.</p><p>##Форматирование в Windows PowerShell Format-List – вывод результата команды в формате списка свойств, где на каждой новой строке отдельное свойство; Format-Table — вывод результата команды в виде таблицы; Format-Wide — вывод результата команды в виде широкой таблицы, в которой отображается только одно свойство каждого объекта; Format-Custom – в данном случае форматирование вывода происходит с использованием пользовательского представления.</p><p>##Работа с сетью в Windows PowerShell Disable-NetAdapter – командлет отключает сетевой адаптер; Enable-NetAdapter – данный командлет включает сетевой адаптер; Rename-NetAdapter — переименовывает сетевой адаптер; Restart-NetAdapter — перезапускает сетевой адаптер; Get-NetIPAddress – выводит информацию о конфигурации IP-адреса; Set-NetIPAddress — изменяет конфигурацию IP-адреса; New-NetIPAddress — создает и настраивает IP-адрес; Remove-NetIPAddress — удаляет IP-адрес и его конфигурацию; Get-NetRoute — выводит таблицу маршрутизации IP; Set-NetRoute — изменяет таблицу маршрутизации IP; New-NetRoute — создает запись в таблице маршрутизации IP; Remove-NetRoute — удаляет одну или несколько записей (IP маршрутов) из таблицы маршрутизации IP; Get-NetIPv4Protocol — выводит информацию о конфигурации протокола IPv4; Get-NetIPv6Protocol — выводит информацию о конфигурации протокола IPv6; Get-NetIPInterface — выводит информацию о свойствах интерфейса IP; Get-NetTCPSetting — показывает информацию о настройках и конфигурации TCP; Test-Connection – командлет посылает ICMP пакеты к одному или нескольким компьютерам, т.е. «пингует» компьютеры.</p><p>##Работа с элементами Clear-Item — очищает содержимое элемента, но не удаляет сам элемент; Copy-Item – копирует элемент; Get-Item — получает элемент в указанном месте; Invoke-Item — выполняет действие по умолчанию над указанным элементом; Move-Item – перемещает элемент; New-Item – создает новый элемент; Remove-Item – удаляет указанные элементы; Rename-Item — переименовывает элемент в пространстве имен поставщика Windows PowerShell; Set-Item — изменяет элемент; Get-ChildItem — возвращает элементы и дочерние элементы в одном или нескольких определенных местах; Get-Location – выводит информацию о текущем местонахождении.</p><p>##Командлеты для работы с Active Directory (AD) New-ADUser – создание нового пользователя в Active Directory; Get-ADUser – выводит информацию о пользователях Active Directory; Set-ADUser — изменяет пользователя Active Directory; Remove-ADUser — удаляет пользователя Active Directory; New-ADGroup – командлет создает группу в Active Directory; Get-ADGroup – выводит информацию о группе или выполняет поиск, чтобы получить несколько групп из Active Directory; Set-ADGroup – командлет изменяет группу в Active Directory; Remove-ADGroup — удаление группы в Active Directory; Add-ADGroupMember — командлет добавляет учетные записи пользователей, компьютеров или групп в качестве новых членов группы Active Directory; Get-ADGroupMember — выводит информацию о членах группы Active Directory; Remove-ADGroupMember — удаление элементов из группы Active Directory; Set-ADAccountPassword — сброс пароля учетной записи Active Directory; Disable-ADAccount — отключает учетную запись Active Directory. Enable-ADAccount — включает учетную запись Active Directory; Unlock-ADAccoun — разблокирует учетную запись Active Directory; New-ADComputer — создание новой учетной записи компьютера в Active Directory; Get-ADComputer — выводит информацию об одном или нескольких компьютерах в Active Directory; Set-ADComputer — изменение учетной записи компьютера в Active Directory; Remove-ADComputer — удаление компьютера из Active Directory.</p><p>##Работа с Hyper-V New-VM — создание новой виртуальной машины; Set-VM — настройка виртуальной машины; Start-VM — запуск виртуальной машины; Stop-VM — закрытие, выключение или сохранение виртуальной машины; Import-VM — импорт виртуальной машины из файла; Move-VM — перемещение виртуальной машины на новый Hyper-V хост; Remove-VM — удаление виртуальной машины; Rename-VM — переименование виртуальной машины; New-VHD — создание одного или нескольких новых виртуальных жестких дисков; Set-VHD – настройка виртуального жесткого диска; Test-VHD — тестирование виртуального жесткого диска на предмет обнаружения проблем, которые сделали бы его непригодным для использования; Add-VMDvdDrive — добавляет DVD диск к виртуальной машине; Remove-VMDvdDrive — удаляет DVD-диск из виртуальной машины; Add-VMHardDiskDrive — добавляет жесткий диск к виртуальной машине; Remove-VMHardDiskDrive — удаляет один или несколько виртуальных жестких дисков (VHD) из виртуальной машины; Add-VMNetworkAdapter — добавляет виртуальный сетевой адаптер на виртуальной машине; Remove-VMNetworkAdapter — удаляет один или несколько виртуальных сетевых адаптеров из виртуальной машины; Copy-VMFile — копирование файлов на виртуальную машину; Get-VMVideo – выводит информацию о настройках видео для виртуальных машин; Move-VMStorage — перемещение хранилища виртуальной машины.</p><p>##Работа с фоновыми заданиями Start-Job – запустить фоновую задачу; Stop-Job – остановить фоновую задачу Get-Job – посмотреть список фоновых задач; Receive-Job – посмотреть результат выполнения фоновой задачи; Remove-Job – удалить фоновую задачу; Wait-Job – перевести фоновую задачу на передний план, для того чтобы дожидаться ее окончания.</p><p>##Работа с объектами Measure-Object – командлет позволяет рассчитывать на основе свойств объектов такие числовые агрегирующие параметры как: минимальное, максимальное, среднее значение, сумму и количество. Например, Вы хотите узнать максимальный или средний размер файла в определенном каталоге, или просто узнать количество файлов (запущенных процессов, служб и так далее); Select-Object – с помощью данного командлета можно выбрать определенные объекты или свойства этих объектов, например Вы хотите выводить только название файла и его размер; Sort-Object — сортирует объекты по значениям свойств; Where-Object – командлет для того чтобы ставить условие для выборки объектов на основе значений их свойств; Group-Object – группирует объекты, которые содержат одинаковое значение для заданных свойств; ForEach-Object – перебор объектов с целью выполнения определенной операции над каждым из этих объектов.</p><p>##Командлеты PowerShell для удаленного управления Enter-PSSession — запускает интерактивный сеанс с удаленным компьютером; Exit-PSSession — завершает интерактивный сеанс с удаленным компьютером; New-PSSession — создает постоянное подключение к локальному или удаленному компьютеру; Remove-PSSession — закрывает один или несколько сеансов Windows PowerShell; Disconnect-PSSession — отсоединяется от сеанса; Connect-PSSession — подключается к отключенным сеансам; Get-PSSession — получает сеансы Windows PowerShell на локальных и удаленных компьютерах; Invoke-Command — выполняет команды на локальном и удаленных компьютерах.</p><p>##Работа со службами и процессами Get-Process – выводит информацию о запущенных процессах на компьютере; Start-Process – запускает один или несколько процессов на компьютере; Stop-Process — останавливает один или несколько запущенных процессов; Get-Service – выводит информацию о службах; Restart-Service – перезапускает службу; Start-Service – запускает службу; Stop-Service — останавливает службу; Suspend-Service – приостанавливает работу службы; Set-Service – с помощью данного командлета можно изменить свойства службы, например, описание, отображаемое имя и режим запуска. Также его можно использовать для запуска, остановки или приостановки службы.</p><p>##Работа с компьютером Restart-Computer – командлет перезапускает операционную систему (перезагружает компьютер); Stop-Computer – выключает компьютер; Rename-Computer – переименовывает компьютер; Checkpoint-Computer — создает точку восстановления системы на локальном компьютере; Restore-Computer — запускает восстановление системы на локальном компьютере; Disable-ComputerRestore — отключает функцию восстановления системы на указанном диске файловой системы; Enable-ComputerRestore — включает функцию восстановления системы на указанном диске файловой системы; Remove-Computer — удаляет локальный компьютер из домена; Get-EventLog – выводит информацию о событиях в журнале событий, или список журналов событий на локальном или удаленном компьютере; Clear-EventLog — удаляет записи из указанных журналов событий.</p><p>##Работа с контентом Get-Content – получает содержимое элемента (например, считывает файл); Add-Content – добавляет содержимое в заданные элементы, например, текст в файл; Clear-Content — удаляет содержимое элемента, но не удаляет сам элемент; Set-Content — записывает или заменяет содержимое в элемент с новым содержанием.</p><p>##Другие командлеты Windows PowerShell Get-ExecutionPolicy – с помощью данного командлета можно узнать действующую политику выполнения Windows PowerShell для текущего сеанса; Set-ExecutionPolicy – командлет изменяет политику выполнения Windows PowerShell; Write-Host – выводит информацию на экран (пишет текст); Read-Host – считывает строку ввода из консоли; Write-Warning – выводит предупреждающее сообщение; Write-Error – командлет объявляет ошибку и выводит ее в поток ошибок; Get-Date – возвращает текущую дату и время; Set-Date – командлет изменяет системную дату и время на компьютере.</p><p>##Force Данный параметр предназначен в общем случае для подавления запросов на проведение каких-то операций. Например, запрос на перезапись существующего файла.</p><p>##WhatIf Предназначен для эмуляции выполнения команды и вывода информации, о том, что бы случилось, если выполнить данную команду без этого параметра. Для примера можете посмотреть вывод команды: Remove-Item C:\\Windows\\notepad.exe -WhatIf</p><p>##Если ваш скрипт выполняет какие-то деструктивные действия, имеет смысл включить этот параметр в ваш скрипт для возможности проверки, что будет выполнено именно то, что нужно. Confirm Если ваш скрипт выполняет какие-то серьёзные и/или деструктивные действия (например, как командлет Set-ExecutionPolicy), следует применять параметр Confirm.</p>`,21)]))}const l=t(s,[["render",n],["__file","powershell.html.vue"]]),p=JSON.parse('{"path":"/os/windows/powershell.html","title":"PowerShell","lang":"en-US","frontmatter":{},"headers":[],"git":{"updatedTime":1698130122000,"contributors":[{"name":"PaRa3uT","username":"PaRa3uT","email":"PaRa3uT.74@gmail.com","commits":2,"url":"https://github.com/PaRa3uT"}]},"filePathRelative":"os/windows/powershell.md"}');export{l as comp,p as data};

import{_ as a,c as n,b as s,o as i}from"./app-BsHIgujo.js";const t={};function l(r,e){return i(),n("div",null,e[0]||(e[0]=[s(`<h1 id="awx" tabindex="-1"><a class="header-anchor" href="#awx"><span>AWX</span></a></h1><h2 id="reset-ansible-awx-tower-admin-password" tabindex="-1"><a class="header-anchor" href="#reset-ansible-awx-tower-admin-password"><span>Reset Ansible AWX Tower admin password</span></a></h2><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">docker ps</span>
<span class="line">docker exec -it awx_web bash</span>
<span class="line">awx-manage changepassword admin</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="install-with-awx-operator" tabindex="-1"><a class="header-anchor" href="#install-with-awx-operator"><span>Install with AWX-operator</span></a></h2><h3 id="install-minikube" tabindex="-1"><a class="header-anchor" href="#install-minikube"><span>Install minikube</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">minikube delete</span>
<span class="line">rm -rf ~/.minikube</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>with proxy</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">export http_proxy=http://&lt;proxy_ip&gt;:&lt;proxy_port&gt;</span>
<span class="line">export https_proxy=http://&lt;proxy_ip&gt;:&lt;proxy_port&gt;</span>
<span class="line">unset no_proxy</span>
<span class="line">unset NO_PROXY</span>
<span class="line">export no_proxy=localhost,127.0.0.1</span>
<span class="line">curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64</span>
<span class="line">sudo install minikube-linux-amd64 /usr/local/bin/minikube</span>
<span class="line">minikube start --docker-env HTTP_PROXY=$http_proxy --docker-env HTTPS_PROXY=$https_proxy --docker-env NO_PROXY=$no_proxy --addons=ingress --cni=flannel --install-addons=true --kubernetes-version=1.21.2</span>
<span class="line">export no_proxy=$no_proxy,$(minikube ip)</span>
<span class="line">export NO_PROXY=$no_proxy</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>without proxy</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64</span>
<span class="line">sudo install minikube-linux-amd64 /usr/local/bin/minikube</span>
<span class="line">minikube start --addons=ingress --cni=flannel --install-addons=true --kubernetes-version=1.21.2</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">alias kubectl=&quot;minikube kubectl --&quot;</span>
<span class="line">kubectl apply -f https://raw.githubusercontent.com/ansible/awx-operator/0.13.0/deploy/awx-operator.yaml</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Wait a few minutes and you should have the awx-operator running.</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">$ kubectl get pods</span>
<span class="line">NAME                            READY   STATUS    RESTARTS   AGE</span>
<span class="line">awx-operator-7dbf9db9d7-z9hqx   1/1     Running   0          50s</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Then create a file named awx-demo.yml with the suggested content. The metadata.name you provide, will be the name of the resulting AWX deployment. If you deploy more than one AWX instance to the same namespace, be sure to use unique names.</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">---</span>
<span class="line">apiVersion: awx.ansible.com/v1beta1</span>
<span class="line">kind: AWX</span>
<span class="line">metadata:</span>
<span class="line">  name: awx-demo</span>
<span class="line">spec:</span>
<span class="line">  service_type: nodeport</span>
<span class="line">  ingress_type: none</span>
<span class="line">  hostname: awx-demo.example.com</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">kubectl apply -f awx-demo.yml</span>
<span class="line">kubectl logs -f deployments/awx-operator</span>
<span class="line">kubectl get pods -l &quot;app.kubernetes.io/managed-by=awx-operator&quot;</span>
<span class="line">kubectl get svc -l &quot;app.kubernetes.io/managed-by=awx-operator&quot;</span>
<span class="line">minikube service awx-demo-service --url</span>
<span class="line">minikube service list (http://192.168.49.2:31648)</span>
<span class="line">kubectl get secret awx-demo-admin-password -o jsonpath=&quot;{.data.password}&quot; | base64 --decode</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="install-with-docker-19-3-0-https-github-com-ansible-awx-blob-devel-tools-docker-compose-readme-md" tabindex="-1"><a class="header-anchor" href="#install-with-docker-19-3-0-https-github-com-ansible-awx-blob-devel-tools-docker-compose-readme-md"><span>Install with docker (19.3.0) (https://github.com/ansible/awx/blob/devel/tools/docker-compose/README.md)</span></a></h2><p>Check latest version on https://github.com/ansible/awx/releases/latest</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git clone -b x.y.z https://github.com/ansible/awx.git</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration"><span>Configuration</span></a></h3><p>In the &quot;inventory file&quot;, set your pg_password, broadcast_websocket_secret, secret_key, and any other settings you need for your deployment</p><h3 id="build-the-image" tabindex="-1"><a class="header-anchor" href="#build-the-image"><span>Build the image</span></a></h3><p>make docker-compose-build</p><h3 id="run-awx" tabindex="-1"><a class="header-anchor" href="#run-awx"><span>Run AWX</span></a></h3><p>Start the containers<br> make docker-compose<br> Clean and Build UI<br> docker exec tools_awx_1 make clean-ui ui-devel<br> Create an admin user<br> docker exec -ti tools_awx_1 awx-manage createsuperuser<br> Load Demo Data (Optionally)<br> docker exec tools_awx_1 awx-manage create_preload_data</p><h2 id="migrating-data-from-local-docker" tabindex="-1"><a class="header-anchor" href="#migrating-data-from-local-docker"><span>Migrating Data from Local Docker</span></a></h2><p>If you are migrating data from a Local Docker installation (17.0.1 and prior) to AWX 18.0 or higher, you can migrate your data to the development environment via the migrate.yml playbook.<br> Note: This will also convert your postgresql bind-mount into a docker volume.</p><h2 id="upgrading-the-development-environment" tabindex="-1"><a class="header-anchor" href="#upgrading-the-development-environment"><span>Upgrading the Development Environment</span></a></h2><p>Upgrading AWX involves checking out the new source code and re-running the make target. Download a newer release from https://github.com/ansible/awx/releases and re-populate the inventory file with your customized variables.<br> After updating the inventory file with any custom values, run the make target from the root of your AWX clone.<br> $ make docker-compose</p>`,29)]))}const d=a(t,[["render",l],["__file","awx.html.vue"]]),p=JSON.parse('{"path":"/unsorted/awx.html","title":"AWX","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Reset Ansible AWX Tower admin password","slug":"reset-ansible-awx-tower-admin-password","link":"#reset-ansible-awx-tower-admin-password","children":[]},{"level":2,"title":"Install with AWX-operator","slug":"install-with-awx-operator","link":"#install-with-awx-operator","children":[{"level":3,"title":"Install minikube","slug":"install-minikube","link":"#install-minikube","children":[]}]},{"level":2,"title":"Install with docker (19.3.0) (https://github.com/ansible/awx/blob/devel/tools/docker-compose/README.md)","slug":"install-with-docker-19-3-0-https-github-com-ansible-awx-blob-devel-tools-docker-compose-readme-md","link":"#install-with-docker-19-3-0-https-github-com-ansible-awx-blob-devel-tools-docker-compose-readme-md","children":[{"level":3,"title":"Configuration","slug":"configuration","link":"#configuration","children":[]},{"level":3,"title":"Build the image","slug":"build-the-image","link":"#build-the-image","children":[]},{"level":3,"title":"Run AWX","slug":"run-awx","link":"#run-awx","children":[]}]},{"level":2,"title":"Migrating Data from Local Docker","slug":"migrating-data-from-local-docker","link":"#migrating-data-from-local-docker","children":[]},{"level":2,"title":"Upgrading the Development Environment","slug":"upgrading-the-development-environment","link":"#upgrading-the-development-environment","children":[]}],"git":{"updatedTime":1634722355000,"contributors":[{"name":"Tarasov Artur","username":"Tarasov Artur","email":"para3ut.74@gmail.com","commits":31,"url":"https://github.com/Tarasov Artur"},{"name":"Тарасов Артур Робертович","username":"Тарасов Артур Робертович","email":"artarasov@mts.ru","commits":1,"url":"https://github.com/Тарасов Артур Робертович"}]},"filePathRelative":"unsorted/awx.md"}');export{d as comp,p as data};
